// Filter, sorting and paginating

// class APIfeatures {
//     constructor(query, queryString) {
//         this.query = query;
//         this.queryString = queryString;
//     }
//     filtering() {
//         const queryObj = { ...this.queryString }

//         const excludedFields = ['page', 'sort', 'limit']
//         excludedFields.forEach(el => delete (queryObj[el]))

//         let queryStr = JSON.stringify(queryObj)
//         queryStr = queryStr.replace(/\b(gte|gt|lt|lte|regex)\b/g, match => '$' + match)

//         //    gte = greater than or equal
//         //    lte = lesser than or equal
//         //    lt = lesser than
//         //    gt = greater than
//         this.query.find(JSON.parse(queryStr))

//         return this;
//     }

//     sorting() {
//         if (this.queryString.sort) {
//             const sortBy = this.queryString.sort.split(',').join(' ')
//             this.query = this.query.sort(sortBy)
//         } else {
//             this.query = this.query.sort('-createdAt')
//         }

//         return this;
//     }

//     paginating() {
//         const page = this.queryString.page * 1 || 1
//         const limit = this.queryString.limit * 1 || 9
//         const skip = (page - 1) * limit;
//         this.query = this.query.skip(skip).limit(limit)
//         return this;
//     }
// }


// const features = new APIfeatures(Products.find(), req.query)
        //     .filtering().sorting().paginating()

        // const products = await features.query

        // res.status(200).send({
        //     status: 'success',
        //     result: products.length,
        //     products: products
        // })